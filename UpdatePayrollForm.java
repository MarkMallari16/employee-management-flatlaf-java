/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.firstflatlaf;

import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.itextpdf.io.image.ImageData;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import java.awt.Desktop;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Mallari
 */
public class UpdatePayrollForm extends javax.swing.JFrame {

    //database
    private Database db;

    //hold data
    private String payrollIdString, empIdString;
    private String salaryString;
    //parsing

    private int payrollIdInt, empIdInt;
    private double salaryDouble;
    //link
    private MainForm mainForm;

    public UpdatePayrollForm(int payrollId, int empId, String empName, double empSalary) {
        initComponents();

        try {
            db = Database.getInstance();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        payrollIdString = String.valueOf(payrollId);
        empIdString = String.valueOf(empId);

        salaryString = String.valueOf(empSalary);

        txtFieldEmpId.setText(empIdString);
        txtFieldName.setText(empName);
        txtFieldSalary.setText(salaryString);

        //icons
        btnUpdate.setIcon(new FlatSVGIcon("svg/edit.svg"));
        btnDelete.setIcon(new FlatSVGIcon("svg/delete.svg"));
        btnBack.setIcon(new FlatSVGIcon("svg/back.svg"));
        btnExportPayroll.setIcon(new FlatSVGIcon("svg/pdf.svg"));

        txtFieldSalary.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                String text = txtFieldSalary.getText();

                if (Character.isDigit(c)) {
                    return;
                }
                if (c == '.' && !text.contains(".")) {
                    return;
                }

                e.consume();

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFieldEmpId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFieldSalary = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtFieldName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnExportPayroll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Update Employee Payroll");

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel1.setText("Update Employee Payroll");

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel2.setText("Employee ID");

        txtFieldEmpId.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtFieldEmpId.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel3.setText("Employee Salary");

        txtFieldSalary.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N

        btnUpdate.setBackground(new java.awt.Color(51, 153, 255));
        btnUpdate.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 102, 102));
        btnDelete.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtFieldName.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtFieldName.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel4.setText("Employee Name");

        btnExportPayroll.setBackground(new java.awt.Color(255, 102, 102));
        btnExportPayroll.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        btnExportPayroll.setText("Export to PDF");
        btnExportPayroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportPayrollActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFieldSalary, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFieldEmpId, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFieldName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExportPayroll, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExportPayroll, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFieldEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFieldSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(603, 589));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        payrollIdInt = Integer.parseInt(payrollIdString);
        empIdInt = Integer.parseInt(txtFieldEmpId.getText());
        salaryDouble = Double.parseDouble(txtFieldSalary.getText());

        Payroll payroll = new Payroll(empIdInt, salaryDouble);

        System.out.println(payrollIdInt);
        db.updatePayroll(payrollIdInt, payroll);

        JOptionPane.showMessageDialog(this, "Successfully Updated.");
        goToPayroll();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        payrollIdInt = Integer.parseInt(payrollIdString);

        db.removePayroll(payrollIdInt);

        JOptionPane.showMessageDialog(this, "Successfully Deleted.");
        goToPayroll();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        goToPayroll();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnExportPayrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportPayrollActionPerformed
        payrollIdInt = Integer.parseInt(payrollIdString);

        String filePath = null;
        //logo path
        String logoPath = "C:\\Users\\markm\\OneDrive\\Documents\\NetBeansProjects\\BasicCRUD\\src\\main\\resources\\svg\\logo.png";

        String sql = "SELECT e.name, e.position, e.department, p.salary "
                + "FROM payroll p INNER JOIN employees e ON p.employee_id = e.id "
                + "WHERE p.id = ?";

        try (PreparedStatement pstmt = db.getConnection().prepareStatement(sql)) {
            pstmt.setInt(1, payrollIdInt);

            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                String name = rs.getString("name");
                String position = rs.getString("position");
                String department = rs.getString("department");
                double salary = rs.getDouble("salary");

                filePath = empIdString + "_payroll.pdf";

                try (PdfWriter writer = new PdfWriter(filePath); PdfDocument pdf = new PdfDocument(writer); Document document = new Document(pdf, PageSize.A4.rotate());) {
                    ImageData imageData = ImageDataFactory.create(logoPath);
                    //logo initialization
                    com.itextpdf.layout.element.Image logo = new com.itextpdf.layout.element.Image(imageData);
                    logo.setWidth(80);
                    logo.setHeight(60);
                    //addigng logo
                    document.add(logo);

                    document.add(new Paragraph("Payroll Information")
                            .setFontSize(24)
                            .setMarginTop(20)
                            .setMarginBottom(16)
                            .setBold());
                    document.add(new Paragraph(name + " Payroll")
                            .setBold()
                            .setMarginBottom(6)
                            .setFontSize(18));

                    document.add(new Paragraph("Employee Payroll Information"));
                    document.add(new Paragraph("Name: " + name));
                    document.add(new Paragraph("Position: " + position));
                    document.add(new Paragraph("Department: " + department));
                    document.add(new Paragraph("========================================================================"));
                    document.add(new Paragraph("Salary: ₱" + salary));
                };

                File fileExported = new File(filePath);
                if (fileExported.exists()) {
                    if (Desktop.isDesktopSupported()) {
                        Desktop.getDesktop().open(fileExported);
                    } else {
                        System.out.println("Error!");
                    }
                } else {
                    System.out.println("File not supported");
                }
            } else {
                System.out.println("Not executed.");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        System.out.println("Hello");

    }//GEN-LAST:event_btnExportPayrollActionPerformed

    private void goToPayroll() {
        if (mainForm == null || !mainForm.isDisplayable()) {
            mainForm = new MainForm(3);
            mainForm.setVisible(true);
            this.dispose();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdatePayrollForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdatePayrollForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdatePayrollForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdatePayrollForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExportPayroll;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtFieldEmpId;
    private javax.swing.JTextField txtFieldName;
    private javax.swing.JTextField txtFieldSalary;
    // End of variables declaration//GEN-END:variables
}
